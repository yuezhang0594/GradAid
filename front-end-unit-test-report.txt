
> gradaid@0.0.0 test:coverage
> vitest run --coverage


 RUN  v3.1.2 /Users/yue/data/CS673/proj-refactor/clerk/GradAid
      Coverage enabled with v8

stdout | src/hooks/__tests__/useLLM.test.ts > useLLM Hook > useGenerateStatementOfPurpose > should generate SOP successfully
[useGenerateStatementOfPurpose] applicationDetails: {
  _id: [32m'app1'[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'PhD'[39m,
  department: [32m'Computer Science Department'[39m,
  documents: [
    {
      _id: [32m'doc1'[39m,
      type: [32m'sop'[39m,
      title: [32m'Statement of Purpose'[39m,
      content: [32m''[39m,
      status: [32m'not_started'[39m
    }
  ]
}
[useGenerateStatementOfPurpose] userProfile: {
  _id: [32m'profile1'[39m,
  _creationTime: [33m1234567890[39m,
  userId: [32m'user1'[39m,
  currentLocation: [32m'New York'[39m,
  countryOfOrigin: [32m'United States'[39m,
  nativeLanguage: [32m'English'[39m,
  educationLevel: [32m'Bachelor'[39m,
  major: [32m'Computer Science'[39m,
  university: [32m'MIT'[39m,
  gpa: [33m3.9[39m,
  gpaScale: [33m4[39m,
  greScores: { verbal: [33m165[39m, quantitative: [33m170[39m, analyticalWriting: [33m5[39m },
  englishTest: {
    type: [32m'TOEFL'[39m,
    overallScore: [33m110[39m,
    sectionScores: {},
    testDate: [32m'2024-01-15'[39m
  },
  researchExperience: [32m'2 years of research in machine learning'[39m,
  researchInterests: [ [32m'AI'[39m, [32m'Machine Learning'[39m, [32m'Computer Vision'[39m ],
  targetDegree: [32m'PhD'[39m,
  intendedField: [32m'Computer Science'[39m,
  careerObjectives: [32m'Research scientist in AI'[39m
}
[useGenerateStatementOfPurpose] university: Stanford University
[useGenerateStatementOfPurpose] program: Computer Science
[useGenerateStatementOfPurpose] data to generateSOP: {
  profile: {
    name: [32m'John Doe'[39m,
    current_location: [32m'New York'[39m,
    country_of_origin: [32m'United States'[39m,
    native_language: [32m'English'[39m,
    education_level: [32m'Bachelor'[39m,
    major: [32m'Computer Science'[39m,
    current_university: [32m'MIT'[39m,
    gpa: [32m'3.9'[39m,
    gpa_scale: [32m'4'[39m,
    gre_verbal: [32m'165'[39m,
    gre_quant: [32m'170'[39m,
    gre_aw: [32m'5'[39m,
    english_test_type: [32m'TOEFL'[39m,
    english_overall: [32m'110'[39m,
    research_experience: [32m'2 years of research in machine learning'[39m,
    research_interests_str: [32m'AI, Machine Learning, Computer Vision'[39m,
    target_degree: [32m'PhD'[39m,
    intended_field: [32m'Computer Science'[39m,
    career_objectives: [32m'Research scientist in AI'[39m
  },
  program: {
    university: [32m'Stanford University'[39m,
    name: [32m'Computer Science'[39m,
    degree: [32m'PhD'[39m,
    department: [32m'Computer Science Department'[39m
  }
}

stdout | src/hooks/__tests__/useLLM.test.ts > useLLM Hook > useGenerateStatementOfPurpose > should generate SOP successfully
[useGenerateStatementOfPurpose] SOP output: Generated Statement of Purpose content

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should fetch document data when documentId is provided
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useLLM.test.ts > useLLM Hook > useGenerateStatementOfPurpose > should handle insufficient AI credits for SOP
[useGenerateStatementOfPurpose] applicationDetails: {
  _id: [32m'app1'[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'PhD'[39m,
  department: [32m'Computer Science Department'[39m,
  documents: [
    {
      _id: [32m'doc1'[39m,
      type: [32m'sop'[39m,
      title: [32m'Statement of Purpose'[39m,
      content: [32m''[39m,
      status: [32m'not_started'[39m
    }
  ]
}
[useGenerateStatementOfPurpose] userProfile: {
  _id: [32m'profile1'[39m,
  _creationTime: [33m1234567890[39m,
  userId: [32m'user1'[39m,
  currentLocation: [32m'New York'[39m,
  countryOfOrigin: [32m'United States'[39m,
  nativeLanguage: [32m'English'[39m,
  educationLevel: [32m'Bachelor'[39m,
  major: [32m'Computer Science'[39m,
  university: [32m'MIT'[39m,
  gpa: [33m3.9[39m,
  gpaScale: [33m4[39m,
  greScores: { verbal: [33m165[39m, quantitative: [33m170[39m, analyticalWriting: [33m5[39m },
  englishTest: {
    type: [32m'TOEFL'[39m,
    overallScore: [33m110[39m,
    sectionScores: {},
    testDate: [32m'2024-01-15'[39m
  },
  researchExperience: [32m'2 years of research in machine learning'[39m,
  researchInterests: [ [32m'AI'[39m, [32m'Machine Learning'[39m, [32m'Computer Vision'[39m ],
  targetDegree: [32m'PhD'[39m,
  intendedField: [32m'Computer Science'[39m,
  careerObjectives: [32m'Research scientist in AI'[39m
}
[useGenerateStatementOfPurpose] university: Stanford University
[useGenerateStatementOfPurpose] program: Computer Science
[useGenerateStatementOfPurpose] data to generateSOP: {
  profile: {
    name: [32m'John Doe'[39m,
    current_location: [32m'New York'[39m,
    country_of_origin: [32m'United States'[39m,
    native_language: [32m'English'[39m,
    education_level: [32m'Bachelor'[39m,
    major: [32m'Computer Science'[39m,
    current_university: [32m'MIT'[39m,
    gpa: [32m'3.9'[39m,
    gpa_scale: [32m'4'[39m,
    gre_verbal: [32m'165'[39m,
    gre_quant: [32m'170'[39m,
    gre_aw: [32m'5'[39m,
    english_test_type: [32m'TOEFL'[39m,
    english_overall: [32m'110'[39m,
    research_experience: [32m'2 years of research in machine learning'[39m,
    research_interests_str: [32m'AI, Machine Learning, Computer Vision'[39m,
    target_degree: [32m'PhD'[39m,
    intended_field: [32m'Computer Science'[39m,
    career_objectives: [32m'Research scientist in AI'[39m
  },
  program: {
    university: [32m'Stanford University'[39m,
    name: [32m'Computer Science'[39m,
    degree: [32m'PhD'[39m,
    department: [32m'Computer Science Department'[39m
  }
}

stdout | src/hooks/__tests__/useLLM.test.ts > useLLM Hook > useGenerateStatementOfPurpose > should handle missing application details
[useGenerateStatementOfPurpose] applicationDetails: [1mnull[22m
[useGenerateStatementOfPurpose] userProfile: {
  _id: [32m'profile1'[39m,
  _creationTime: [33m1234567890[39m,
  userId: [32m'user1'[39m,
  currentLocation: [32m'New York'[39m,
  countryOfOrigin: [32m'United States'[39m,
  nativeLanguage: [32m'English'[39m,
  educationLevel: [32m'Bachelor'[39m,
  major: [32m'Computer Science'[39m,
  university: [32m'MIT'[39m,
  gpa: [33m3.9[39m,
  gpaScale: [33m4[39m,
  greScores: { verbal: [33m165[39m, quantitative: [33m170[39m, analyticalWriting: [33m5[39m },
  englishTest: {
    type: [32m'TOEFL'[39m,
    overallScore: [33m110[39m,
    sectionScores: {},
    testDate: [32m'2024-01-15'[39m
  },
  researchExperience: [32m'2 years of research in machine learning'[39m,
  researchInterests: [ [32m'AI'[39m, [32m'Machine Learning'[39m, [32m'Computer Vision'[39m ],
  targetDegree: [32m'PhD'[39m,
  intendedField: [32m'Computer Science'[39m,
  careerObjectives: [32m'Research scientist in AI'[39m
}

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should fetch application data and set university and program info
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useLLM.test.ts > useLLM Hook > useGenerateStatementOfPurpose > should handle errors during SOP generation
[useGenerateStatementOfPurpose] applicationDetails: {
  _id: [32m'app1'[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'PhD'[39m,
  department: [32m'Computer Science Department'[39m,
  documents: [
    {
      _id: [32m'doc1'[39m,
      type: [32m'sop'[39m,
      title: [32m'Statement of Purpose'[39m,
      content: [32m''[39m,
      status: [32m'not_started'[39m
    }
  ]
}
[useGenerateStatementOfPurpose] userProfile: {
  _id: [32m'profile1'[39m,
  _creationTime: [33m1234567890[39m,
  userId: [32m'user1'[39m,
  currentLocation: [32m'New York'[39m,
  countryOfOrigin: [32m'United States'[39m,
  nativeLanguage: [32m'English'[39m,
  educationLevel: [32m'Bachelor'[39m,
  major: [32m'Computer Science'[39m,
  university: [32m'MIT'[39m,
  gpa: [33m3.9[39m,
  gpaScale: [33m4[39m,
  greScores: { verbal: [33m165[39m, quantitative: [33m170[39m, analyticalWriting: [33m5[39m },
  englishTest: {
    type: [32m'TOEFL'[39m,
    overallScore: [33m110[39m,
    sectionScores: {},
    testDate: [32m'2024-01-15'[39m
  },
  researchExperience: [32m'2 years of research in machine learning'[39m,
  researchInterests: [ [32m'AI'[39m, [32m'Machine Learning'[39m, [32m'Computer Vision'[39m ],
  targetDegree: [32m'PhD'[39m,
  intendedField: [32m'Computer Science'[39m,
  careerObjectives: [32m'Research scientist in AI'[39m
}
[useGenerateStatementOfPurpose] university: Stanford University
[useGenerateStatementOfPurpose] program: Computer Science
[useGenerateStatementOfPurpose] data to generateSOP: {
  profile: {
    name: [32m'John Doe'[39m,
    current_location: [32m'New York'[39m,
    country_of_origin: [32m'United States'[39m,
    native_language: [32m'English'[39m,
    education_level: [32m'Bachelor'[39m,
    major: [32m'Computer Science'[39m,
    current_university: [32m'MIT'[39m,
    gpa: [32m'3.9'[39m,
    gpa_scale: [32m'4'[39m,
    gre_verbal: [32m'165'[39m,
    gre_quant: [32m'170'[39m,
    gre_aw: [32m'5'[39m,
    english_test_type: [32m'TOEFL'[39m,
    english_overall: [32m'110'[39m,
    research_experience: [32m'2 years of research in machine learning'[39m,
    research_interests_str: [32m'AI, Machine Learning, Computer Vision'[39m,
    target_degree: [32m'PhD'[39m,
    intended_field: [32m'Computer Science'[39m,
    career_objectives: [32m'Research scientist in AI'[39m
  },
  program: {
    university: [32m'Stanford University'[39m,
    name: [32m'Computer Science'[39m,
    degree: [32m'PhD'[39m,
    department: [32m'Computer Science Department'[39m
  }
}

stdout | src/hooks/__tests__/useLLM.test.ts > useLLM Hook > useGenerateLetterOfRecommendation > should generate LOR successfully
[useGenerateLetterOfRecommendation] data to generateLOR: {
  profile: {
    name: [32m'John Doe'[39m,
    current_location: [32m'New York'[39m,
    country_of_origin: [32m'United States'[39m,
    native_language: [32m'English'[39m,
    education_level: [32m'Bachelor'[39m,
    major: [32m'Computer Science'[39m,
    current_university: [32m'MIT'[39m,
    gpa: [32m'3.9'[39m,
    gpa_scale: [32m'4'[39m,
    gre_verbal: [32m'165'[39m,
    gre_quant: [32m'170'[39m,
    gre_aw: [32m'5'[39m,
    english_test_type: [32m'TOEFL'[39m,
    english_overall: [32m'110'[39m,
    research_experience: [32m'2 years of research in machine learning'[39m,
    research_interests_str: [32m'AI, Machine Learning, Computer Vision'[39m,
    target_degree: [32m'PhD'[39m,
    intended_field: [32m'Computer Science'[39m,
    career_objectives: [32m'Research scientist in AI'[39m
  },
  university: { name: [32m'Stanford University'[39m },
  program: {
    name: [32m'Computer Science'[39m,
    degree: [32m'PhD'[39m,
    department: [32m'Computer Science Department'[39m
  },
  recommender: { name: [32m'Dr. John Smith'[39m, email: [32m'john.smith@example.com'[39m }
}

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should update state when setState is called
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should have the correct initial state
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useLLM.test.ts > useLLM Hook > useGenerateLetterOfRecommendation > should handle insufficient AI credits for LOR
[useGenerateLetterOfRecommendation] data to generateLOR: {
  profile: {
    name: [32m'John Doe'[39m,
    current_location: [32m'New York'[39m,
    country_of_origin: [32m'United States'[39m,
    native_language: [32m'English'[39m,
    education_level: [32m'Bachelor'[39m,
    major: [32m'Computer Science'[39m,
    current_university: [32m'MIT'[39m,
    gpa: [32m'3.9'[39m,
    gpa_scale: [32m'4'[39m,
    gre_verbal: [32m'165'[39m,
    gre_quant: [32m'170'[39m,
    gre_aw: [32m'5'[39m,
    english_test_type: [32m'TOEFL'[39m,
    english_overall: [32m'110'[39m,
    research_experience: [32m'2 years of research in machine learning'[39m,
    research_interests_str: [32m'AI, Machine Learning, Computer Vision'[39m,
    target_degree: [32m'PhD'[39m,
    intended_field: [32m'Computer Science'[39m,
    career_objectives: [32m'Research scientist in AI'[39m
  },
  university: { name: [32m'Stanford University'[39m },
  program: {
    name: [32m'Computer Science'[39m,
    degree: [32m'PhD'[39m,
    department: [32m'Computer Science Department'[39m
  },
  recommender: { name: [32m'Dr. John Smith'[39m, email: [32m'john.smith@example.com'[39m }
}

stdout | src/hooks/__tests__/useLLM.test.ts > useLLM Hook > useGenerateLetterOfRecommendation > should handle errors during LOR generation
[useGenerateLetterOfRecommendation] data to generateLOR: {
  profile: {
    name: [32m'John Doe'[39m,
    current_location: [32m'New York'[39m,
    country_of_origin: [32m'United States'[39m,
    native_language: [32m'English'[39m,
    education_level: [32m'Bachelor'[39m,
    major: [32m'Computer Science'[39m,
    current_university: [32m'MIT'[39m,
    gpa: [32m'3.9'[39m,
    gpa_scale: [32m'4'[39m,
    gre_verbal: [32m'165'[39m,
    gre_quant: [32m'170'[39m,
    gre_aw: [32m'5'[39m,
    english_test_type: [32m'TOEFL'[39m,
    english_overall: [32m'110'[39m,
    research_experience: [32m'2 years of research in machine learning'[39m,
    research_interests_str: [32m'AI, Machine Learning, Computer Vision'[39m,
    target_degree: [32m'PhD'[39m,
    intended_field: [32m'Computer Science'[39m,
    career_objectives: [32m'Research scientist in AI'[39m
  },
  university: { name: [32m'Stanford University'[39m },
  program: {
    name: [32m'Computer Science'[39m,
    degree: [32m'PhD'[39m,
    department: [32m'Computer Science Department'[39m
  },
  recommender: { name: [32m'Dr. John Smith'[39m, email: [32m'john.smith@example.com'[39m }
}

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should save document and update status when handleSave is called
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should save document and update status when handleSave is called
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should handle errors during save
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should handle errors during save
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should navigate back when handleBack is called
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should submit recommender information when handleRecommenderSubmit is called
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should submit recommender information when handleRecommenderSubmit is called
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should handle errors during recommender submission
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should handle errors during recommender submission
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should show confirmation dialog when handleGenerateDocument is called
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should show confirmation dialog when handleGenerateDocument is called
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should call generateSOP when performDocumentGeneration is called for SOP document
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should call generateSOP when performDocumentGeneration is called for SOP document
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should handle errors during document generation
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

stdout | src/hooks/__tests__/useDocumentEditor.test.ts > useDocumentEditor Hook > should handle errors during document generation
Location state: { applicationId: [32m'app1'[39m, universityName: [32m'Stanford University'[39m }
Final application ID: app1
University name from location state: Stanford University
Application details: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
applicationId: app1
applicationDetails: {
  _id: [32m'app1'[39m,
  _creationTime: [33m1745928684835[39m,
  university: [32m'Stanford University'[39m,
  program: [32m'Computer Science'[39m,
  degree: [32m'MS'[39m,
  status: [32m'in_progress'[39m,
  userId: [32m'user1'[39m
}
universityName: Stanford University
programDegree: MS
programName: Computer Science

 ✓ src/hooks/__tests__/useProfile.test.ts (9 tests) 24ms
 ✓ src/hooks/__tests__/useDashboardData.test.ts (4 tests) 35ms
 ✓ src/hooks/__tests__/useApply.test.ts (7 tests) 40ms
 ✓ src/hooks/__tests__/useApplicationDocument.test.ts (10 tests) 37ms
 ✓ src/hooks/__tests__/useLLM.test.ts (9 tests) 43ms
 ✓ src/hooks/__tests__/useDocumentEditor.test.ts (12 tests) 53ms
 ✓ src/routes/__tests__/SavedProgramsPage.test.tsx (5 tests) 108ms
 ✓ src/routes/pages/__tests__/activity.test.tsx (4 tests) 224ms
 ✓ src/components/dashboard/__tests__/DocumentStats.test.tsx (7 tests) 300ms
 ✓ src/routes/__tests__/ProgramApplyPage.test.tsx (6 tests) 38ms
 ✓ src/hooks/__tests__/useApplicationDetail.test.ts (3 tests) 31ms
 ✓ src/routes/pages/__tests__/documents.test.tsx (4 tests) 33ms
 ✓ src/routes/pages/__tests__/timeline.test.tsx (4 tests) 48ms
 ✓ src/routes/__tests__/AuthenticatedRoute.test.tsx (6 tests) 44ms
 ✓ src/routes/__tests__/ProgramSearchPage.test.tsx (6 tests) 67ms
 ✓ src/components/dashboard/__tests__/ApplicationTimeline.test.tsx (5 tests) 276ms
 ✓ src/hooks/__tests__/useProgram.test.ts (5 tests) 64ms
 ✓ src/routes/pages/__tests__/credits.test.tsx (3 tests) 113ms
 ✓ src/routes/dashboard/__tests__/Dashboard.test.tsx (3 tests) 310ms
 ✓ src/routes/support/__tests__/ContactPage.test.tsx (6 tests) 1593ms
   ✓ ContactPage Component > updates form fields when user types  523ms
   ✓ ContactPage Component > submits the form successfully  332ms
   ✓ ContactPage Component > shows error message when form submission fails  403ms
 ✓ src/__tests__/App.test.tsx (9 tests) 39ms
 ✓ src/hooks/__tests__/useFeedback.test.ts (5 tests) 36ms
 ✓ src/hooks/__tests__/useFavorites.test.ts (6 tests) 19ms
 ✓ src/routes/applications/__tests__/applications.test.tsx (3 tests) 76ms
 ✓ src/routes/support/__tests__/FAQPage.test.tsx (5 tests) 166ms
 ✓ src/routes/auth/__tests__/SignOut.test.tsx (4 tests) 66ms
 ✓ src/routes/__tests__/ProtectedRoute.test.tsx (4 tests) 38ms
 ✓ src/hooks/__tests__/useProgramSearch.test.ts (3 tests) 16ms
 ✓ src/routes/support/__tests__/ResendDashboard.test.tsx (5 tests) 110ms
 ✓ src/components/dashboard/__tests__/ClickableCard.test.tsx (5 tests) 154ms
 ✓ src/lib/__tests__/formatDocument.test.ts (11 tests) 17ms
 ✓ src/routes/applications/__tests__/DocumentEditor.test.tsx (4 tests) 329ms
 ✓ src/lib/__tests__/inputValidation.test.ts (8 tests) 4ms
 ✓ src/routes/legal/__tests__/tos.test.tsx (6 tests) 132ms
 ✓ src/routes/legal/__tests__/privacy.test.tsx (5 tests) 156ms
 ✓ src/hooks/__tests__/use-mobile.test.ts (3 tests) 17ms
 ✓ src/lib/__tests__/formatLocation.test.ts (10 tests) 6ms
 ✓ src/lib/__tests__/formatDate.test.ts (6 tests) 16ms
 ✓ src/routes/profile/__tests__/page.test.tsx (4 tests) 33ms
 ✓ src/routes/applications/__tests__/ApplicationDetail.test.tsx (1 test) 25ms
 ✓ src/routes/auth/__tests__/SignUp.test.tsx (3 tests) 24ms
 ✓ src/routes/auth/__tests__/SignIn.test.tsx (3 tests) 25ms
 ✓ src/routes/__tests__/FeedbackPage.test.tsx (3 tests) 25ms
 ✓ src/lib/__tests__/utils.test.ts (7 tests) 7ms
 ✓ src/routes/onboarding/__tests__/page.test.tsx (3 tests) 27ms
 ✓ src/__tests__/main.test.tsx (1 test) 4ms
 ✓ src/components/__tests__/Button.test.tsx (3 tests) 110ms

 Test Files  47 passed (47)
      Tests  248 passed (248)
   Start at  08:11:23
   Duration  5.70s (transform 2.48s, setup 7.84s, collect 6.42s, tests 5.16s, environment 20.23s, prepare 4.13s)

 % Coverage report from v8
-------------------|---------|----------|---------|---------|-------------------
File               | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-------------------|---------|----------|---------|---------|-------------------
All files          |   76.87 |    72.37 |    63.2 |   76.87 |                   
 src               |      68 |       50 |      50 |      68 |                   
  App.tsx          |     100 |      100 |     100 |     100 |                   
  main.tsx         |       0 |        0 |       0 |       0 | 1-37              
 src/hooks         |   92.76 |    67.13 |   96.55 |   92.76 |                   
  use-mobile.ts    |   86.66 |      100 |      50 |   86.66 | 11-12             
  ...tionDetail.ts |     100 |      100 |     100 |     100 |                   
  ...onDocument.ts |   85.71 |    66.66 |     100 |   85.71 | ...05-107,127-130 
  useApply.ts      |     100 |    68.42 |     100 |     100 | 20,72,80,112-124  
  ...hboardData.ts |   92.24 |    65.21 |     100 |   92.24 | 88-93,103,135,138 
  ...mentEditor.ts |    86.9 |    54.54 |     100 |    86.9 | ...80-181,186-198 
  useFavorites.ts  |     100 |      100 |     100 |     100 |                   
  useFeedback.ts   |   96.29 |       80 |     100 |   96.29 | 83-84             
  useLLM.ts        |    89.7 |       44 |     100 |    89.7 | ...48-152,160-164 
  useProfile.ts    |     100 |      100 |     100 |     100 |                   
  useProgram.ts    |     100 |    83.33 |     100 |     100 | 45                
  ...gramSearch.ts |     100 |      100 |     100 |     100 |                   
 src/lib           |    98.7 |    95.23 |     100 |    98.7 |                   
  formatDate.ts    |     100 |      100 |     100 |     100 |                   
  ...atDocument.ts |     100 |      100 |     100 |     100 |                   
  ...atLocation.ts |    97.4 |    81.81 |     100 |    97.4 | 94-95             
  ...Validation.ts |     100 |      100 |     100 |     100 |                   
  utils.ts         |     100 |      100 |     100 |     100 |                   
 src/routes        |   93.08 |    83.09 |    90.9 |   93.08 |                   
  ...atedRoute.tsx |     100 |      100 |     100 |     100 |                   
  FeedbackPage.tsx |     100 |      100 |     100 |     100 |                   
  ...ApplyPage.tsx |     100 |      100 |     100 |     100 |                   
  ...earchPage.tsx |   96.06 |    66.66 |     100 |   96.06 | 97-98,175-178     
  ...ctedRoute.tsx |     100 |      100 |     100 |     100 |                   
  ...gramsPage.tsx |   85.14 |    71.42 |      75 |   85.14 | ...32-137,147-152 
 ...s/applications |   55.45 |    46.93 |   17.24 |   55.45 |                   
  ...ionDetail.tsx |   32.18 |       10 |    6.25 |   32.18 | ...72-307,310-340 
  ...entEditor.tsx |   78.65 |    40.74 |   11.11 |   78.65 | ...67,282,301-304 
  applications.tsx |   88.23 |     90.9 |   66.66 |   88.23 | 59-66             
  types.ts         |       0 |        0 |       0 |       0 |                   
 src/routes/auth   |     100 |      100 |     100 |     100 |                   
  SignIn.tsx       |     100 |      100 |     100 |     100 |                   
  SignOut.tsx      |     100 |      100 |     100 |     100 |                   
  SignUp.tsx       |     100 |      100 |     100 |     100 |                   
 ...utes/dashboard |   72.33 |       50 |      20 |   72.33 |                   
  Dashboard.tsx    |   72.33 |       50 |      20 |   72.33 | ...61,281,293-311 
 src/routes/legal  |     100 |      100 |     100 |     100 |                   
  privacy.tsx      |     100 |      100 |     100 |     100 |                   
  tos.tsx          |     100 |      100 |     100 |     100 |                   
 ...tes/onboarding |     100 |      100 |     100 |     100 |                   
  page.tsx         |     100 |      100 |     100 |     100 |                   
 src/routes/pages  |    85.9 |    81.48 |   53.33 |    85.9 |                   
  activity.tsx     |   92.92 |       80 |      80 |   92.92 | ...28-230,238-241 
  credits.tsx      |     100 |      100 |     100 |     100 |                   
  documents.tsx    |      65 |    76.92 |   28.57 |      65 | ...77,190-195,199 
  timeline.tsx     |   92.94 |    83.33 |      50 |   92.94 | 46-47,57-60,78    
 ...routes/profile |     100 |      100 |     100 |     100 |                   
  page.tsx         |     100 |      100 |     100 |     100 |                   
 ...routes/support |   48.03 |    68.18 |   63.63 |   48.03 |                   
  ContactPage.tsx  |   91.06 |    66.66 |     100 |   91.06 | ...23-225,248-250 
  FAQPage.tsx      |     100 |      100 |      50 |     100 |                   
  ...Dashboard.tsx |       0 |        0 |       0 |       0 | 1-485             
 src/store         |     100 |      100 |     100 |     100 |                   
  document.ts      |     100 |      100 |     100 |     100 |                   
-------------------|---------|----------|---------|---------|-------------------
